# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

name: $(Date:yyyy.MM.dd)$(Rev:.r)

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud - tbaker'
    organization: 'pex'
    projectKey: 'remote-provisioning-mock'
    projectName: 'remote-provisioning-mock'
    projectVersion: '$(Build.BuildNumber)'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: 'Tests/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- script: dotnet publish RemoteProvisioningServiceMock/RemoteProvisioningServiceMock.csproj --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)
  displayName: 'dotnet publish RemoteProvisioningServiceMock/RemoteProvisioningServiceMock.csproj $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: 'Tests/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: WhiteSource@20
  env:
    NODE_TLS_REJECT_UNAUTHORIZED: 0
  inputs:
    cwd: '$(System.DefaultWorkingDirectory)'
    extensions: '.dll'
    checkPolicies: 'FAIL_ON_BUILD'
    productName: 'Marketplace'
    projectRule: 'projectName'
    projectName: '$(Build.Repository.Name)'
    forceCheckAllDependencies: true
    forceUpdate: true
    WhiteSourceService: 'WhiteSource'

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
